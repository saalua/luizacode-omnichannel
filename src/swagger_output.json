{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Luiza<Code> - Omni Channel",
    "description": "API NodeJS que desempenha a funcionalidade de Omni Channel do cliente. Projeto proposto no encerramento da aceleração Luiza Code, turma NodeJS."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Lojas",
      "description": "Endpoints relacionados às lojas."
    },
    {
      "name": "Produtos",
      "description": "Endpoints relacionados aos recursos de produto."
    },
    {
      "name": "Clientes",
      "description": "Endpoints relacionados ao usuário."
    },
    {
      "name": "Pedidos",
      "description": "Endpoints relacionados aos pedidos do cliente."
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "description": "Insira seu token no campo abaixo:"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/lojas/": {
      "get": {
        "tags": [
          "Lojas"
        ],
        "description": "Endpoint para se obter a lista das lojas.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de lojas encontrada.",
            "schema": {
              "$ref": "#/definitions/Lojas"
            }
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "404": {
            "description": "Lista de lojas não encontrada."
          }
        }
      }
    },
    "/produtos/": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "description": "Endpoint para se obter uma lista de produtos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de produtos encontrada.",
            "schema": {
              "$ref": "#/definitions/Produtos"
            }
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "404": {
            "description": "Lista de produtos não encontrada."
          }
        }
      }
    },
    "/produtos/{id}": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "description": "Endpoint para acessar um produto pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "404": {
            "description": "Produto não encontrado."
          }
        }
      }
    },
    "/pedidos/{idPedido}": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para a consulta de pedidos do cliente por ID.",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta realizada com sucesso."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/pedidos/": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para a consulta de todos os pedidos do cliente.",
        "parameters": [
          {
            "name": "idCliente",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta realizada com sucesso."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedidos não encontrados."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para se realizar um pedido.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "idPedido": {
                  "example": "any"
                },
                "produtos": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido finalizado."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/finalizar": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para finalizar o pedido do cliente.",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido finalizado."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/retirar": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para retirar o pedido do cliente.",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido pronto para ser retirado."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/pedidos/{idPedido}/remover/{idProduto}": {
      "delete": {
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint para remover um pedido.",
        "parameters": [
          {
            "name": "idPedido",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idProduto",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido cancelado."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/clientes\r/": {
      "post": {
        "tags": [
          "Clientes"
        ],
        "description": "Endpoint para o cadastro do cliente.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "any"
                },
                "logradouro": {
                  "example": "any"
                },
                "bairro": {
                  "example": "any"
                },
                "cidade": {
                  "example": "any"
                },
                "cep": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente cadastrado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Clientes"
            }
          },
          "400": {
            "description": "Houve algum erro na requisição."
          }
        }
      }
    },
    "/clientes\r/login": {
      "post": {
        "tags": [
          "Clientes"
        ],
        "description": "Endpoint para o login do usuário, disponibilizando o token de acesso aos recursos de pedido.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login feito com sucesso."
          },
          "400": {
            "description": "Houve algum erro na requisição."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Usuário não cadastrado."
          }
        }
      }
    },
    "/clientes\r/login": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Lojas": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "filial": {
          "type": "string",
          "example": "Magalu SP"
        },
        "logradouro": {
          "type": "string",
          "example": "Rua Lago das Rosas."
        },
        "bairro": {
          "type": "string",
          "example": "Lago das Rosas"
        },
        "cidade": {
          "type": "string",
          "example": "São Paulo"
        },
        "cep": {
          "type": "string",
          "example": "12345678"
        },
        "updated_at": {
          "type": "string",
          "example": "2021-12-12 03:03:00"
        },
        "created_at": {
          "type": "string",
          "example": "2021-12-12 03:03:00"
        }
      }
    },
    "Produtos": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "produto": {
          "type": "string",
          "example": "Notebook"
        },
        "categoria": {
          "type": "string",
          "example": "Informática"
        },
        "valor": {
          "type": "number",
          "example": 2500
        },
        "descricao": {
          "type": "string",
          "example": "Notebook com memória de 4GB, SSD de 128GB, processamento em 64bits, branco."
        },
        "marca": {
          "type": "string",
          "example": "Dell"
        },
        "updated_at": {
          "type": "string",
          "example": "2021-12-12 03:03:00"
        },
        "created_at": {
          "type": "string",
          "example": "2021-12-12 03:03:00"
        }
      }
    },
    "Clientes": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Ana"
        },
        "logradouro": {
          "type": "string",
          "example": "Rua Augusta."
        },
        "bairro": {
          "type": "string",
          "example": "Jardim da Liberdade"
        },
        "cidade": {
          "type": "string",
          "example": "São Paulo"
        },
        "cep": {
          "type": "string",
          "example": "12345678"
        },
        "email": {
          "type": "string",
          "example": "ana@email.com"
        },
        "senha": {
          "type": "string",
          "example": "123456"
        }
      }
    }
  }
}